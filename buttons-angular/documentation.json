{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-edd81c6d620afd352c79b42deb213cc591742f3b1897396c4e2c721e141f3a36c36ad9d50389c1f8a0cbda8240a54782aeccd7045dbfd57338f48b8f24b6db9c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'buttons-angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent  implements OnInit{\n  ngOnInit(): void {\n  }\n  title = 'buttons-angular';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+JP&display=swap\");\r\n@import url(\"http://fonts.cdnfonts.com/css/poppins\");\r\n@import './styles/vars';\r\n@import './styles/reset';\r\n\r\n\r\n:host {\r\n  font-size: 16px;\r\n  margin-top: 53px;\r\n  min-height: 100vh;\r\n  max-width: 900px;\r\n  scroll-behavior: smooth;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  margin-left: 20px;\r\n}\r\n\r\nheader {\r\n  font-family: var(--ff-poppins);\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  line-height: 36px;\r\n}\r\n\r\nmain div:first-child {\r\n  margin-top: 28px;\r\n}\r\n\r\nmain div {\r\n  margin-top: 45px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n\r\n\r\nfooter {\r\n  margin-top: 5vh;\r\n  margin-bottom: 3vh;\r\n  margin-left: 5px;\r\n  color: gray;\r\n  white-space: nowrap;\r\n}\r\n\r\nfooter .username {\r\n  color: rgb(126, 126, 126);\r\n  font-weight: 550;\r\n  text-decoration: underline;\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<header>\n  Buttons\n</header>\n<main>\n  <div>\n    <app-button></app-button>\n  </div>\n  <div>\n    <app-button variant='outline'></app-button>\n  </div>\n  <div>\n    <app-button variant='text'></app-button>\n  </div>\n  <div>\n    <app-button [disableShadow]='true'></app-button>\n  </div>\n  <div>\n    <app-button [disabled]='true'></app-button>\n    <app-button variant='text' [disabled]='true'></app-button>\n  </div>\n  <div>\n    <app-button startIcon='local_grocery_store'></app-button>\n    <app-button endIcon='local_grocery_store'></app-button>\n  </div>\n  <div>\n    <app-button size='sm'></app-button>\n    <app-button size='md'></app-button>\n    <app-button size='lg'></app-button>\n  </div>\n  <div>\n    <app-button color='default'></app-button>\n    <app-button color='primary'></app-button>\n    <app-button color='secondary'>Secondary</app-button>\n    <app-button color='danger'>Danger</app-button>\n  </div>\n  <div class='icons-text'>\n    Icons: htpps://material.io/resources/icons/?style=round\n  </div>\n</main>\n<footer>\n  created by\n  <span class='username'>\n    username\n  </span>\n  - devchallenges.io\n</footer>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-82485d1610467f1b45723eb702576c270d3de4c5a523fb39409fea63887b9779a1c8943888cd7ba45b985a4d15b59f948be98ecd401d19b574179dda6b74fe74",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "template": "<button\n  [attr.variant]=\"variant\"\n  [attr.size]=\"size\"\n  [attr.color]=\"color\"\n  [attr.startIcon]=\"startIcon.length > 0 ? startIcon : undefined\"\n  [attr.endIcon]=\"endIcon.length > 0 ? endIcon : undefined\"\n  [attr.disabled]=\"disabled ? 'disabled' : undefined\"\n  [attr.disableShadow]=\"disableShadow ? 'disabledShadow' : undefined\"\n>\n  <i *ngIf=\"startIcon.length > 0\" class=\"material-icons\">\n    {{ startIcon }}\n  </i>\n  {{ label }}\n  <i *ngIf=\"endIcon.length > 0\" class=\"material-icons\">\n    {{ endIcon }}\n  </i>\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "\"default\" | \"primary\" | \"secondary\" | \"danger\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disableShadow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "endIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "decorators": []
                },
                {
                    "name": "startIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"default\" | \"outline\" | \"text\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  template: `\n    <button\n      [attr.variant]=\"variant\"\n      [attr.size]=\"size\"\n      [attr.color]=\"color\"\n      [attr.startIcon]=\"startIcon.length > 0 ? startIcon : undefined\"\n      [attr.endIcon]=\"endIcon.length > 0 ? endIcon : undefined\"\n      [attr.disabled]=\"disabled ? 'disabled' : undefined\"\n      [attr.disableShadow]=\"disableShadow ? 'disabledShadow' : undefined\"\n    >\n      <i *ngIf=\"startIcon.length > 0\" class=\"material-icons\">\n        {{ startIcon }}\n      </i>\n      {{ label }}\n      <i *ngIf=\"endIcon.length > 0\" class=\"material-icons\">\n        {{ endIcon }}\n      </i>\n    </button>\n  `,\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ButtonComponent implements OnInit {\n  @Input() label = 'Default';\n\n  @Input() startIcon: string = '';\n  @Input() endIcon: string = '';\n  @Input() variant: 'default' | 'outline' | 'text' = 'default';\n  @Input() color: 'default' | 'primary' | 'secondary' | 'danger' = 'default';\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\n\n  @Input() disabled: boolean = false;\n  @Input() disableShadow: boolean = false;\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.startIcon != '' || (this.endIcon != '' && this.color == 'default'))\n      this.color = 'primary';\n    if (\n      this.disableShadow == true &&\n      this.color == 'default' &&\n      this.variant == 'default' &&\n      this.startIcon == '' &&\n      this.endIcon == ''\n    )\n      this.color = 'primary';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/icon?family=Material+Icons\");\r\n@import \"../../styles/vars\";\r\n@import \"../../styles/reset\";\r\n\r\nbutton {\r\n  --bg-color: var(--btn-default-bg-color);\r\n  --text-color: #3f3f3f;\r\n  --padding: var(--padding-md);\r\n\r\n  transition: background 0.4s ease-in-out;\r\n  margin-right: 10vw;\r\n  font-family: var(--ff-noton);\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 0.875rem;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  color: var(--text-color);\r\n  border: none;\r\n  outline: none;\r\n  background-color: var(--bg-color);\r\n  padding: var(--padding);\r\n  box-shadow: var(--btn-default-shadow);\r\n  border-radius: var(--border-radius);\r\n\r\n  i.material-icons {\r\n    font-size: 1rem;\r\n    text-align: center;\r\n    line-height: 20px;\r\n  }\r\n\r\n  &:focus,\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: var(--btn-default-bg-color-hover);\r\n  }\r\n\r\n  // OUTLINE\r\n  &[variant=\"outline\"] {\r\n    --text-color: var(--primary-color);\r\n    border: 1px solid var(--text-color) !important;\r\n    background-color: transparent !important;\r\n    color: var(--text-color) !important;\r\n    box-shadow: none !important;\r\n\r\n    &:focus,\r\n    &:hover {\r\n      cursor: pointer;\r\n      background: rgba(var(--primary-color-light), 0.1) !important;\r\n    }\r\n\r\n    &[color=\"secondary\"] {\r\n      --text-color: rgba(var(--secondary-color-light));\r\n      border: 1px solid var(--text-color);\r\n      background-color: transparent;\r\n      box-shadow: none;\r\n      color: var(--text-color);\r\n\r\n      &:focus,\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: rgba(var(--secondary-color-light), 0.1);\r\n      }\r\n    }\r\n  }\r\n\r\n  // TEXT\r\n  &[variant=\"text\"] {\r\n    color: var(--primary-color) !important;\r\n    border: 1px solid transparent;\r\n    outline: none !important;\r\n    background-color: transparent !important;\r\n    padding: var(--padding);\r\n    box-shadow: none !important;\r\n    border-radius: var(--border-radius);\r\n\r\n    &:focus,\r\n    &:hover {\r\n      cursor: pointer;\r\n      background: rgba(41, 98, 255, 0.1);\r\n    }\r\n  }\r\n\r\n  // DISABLE SHADOW\r\n  &[disableShadow] {\r\n    color: #ffffff;\r\n    border: none !important;\r\n    outline: none !important;\r\n    background-color: var(--primary-color);\r\n    box-shadow: none !important;\r\n\r\n    &:focus,\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  // DISABLED\r\n  &[disabled] {\r\n    color: rgba(158, 158, 158, 1);\r\n    border: none;\r\n    outline: none;\r\n    background-color: #e0e0e0;\r\n    box-shadow: none;\r\n\r\n    &:focus,\r\n    &:hover {\r\n      cursor: default !important;\r\n    }\r\n\r\n    &[variant=\"text\"] {\r\n      color: rgba(158, 158, 158, 1);\r\n      border: none;\r\n      background-color: transparent;\r\n      &:focus,\r\n      &:hover {\r\n        cursor: default;\r\n      }\r\n    }\r\n  }\r\n\r\n  &[startIcon],\r\n  &[endIcon] {\r\n    --bg-color: var(--primary-color);\r\n    color: #ffffff;\r\n    border: none;\r\n    outline: none;\r\n    background: var(--bg-color);\r\n  }\r\n\r\n  &[startIcon] i.material-icons {\r\n    float: left;\r\n    margin: 0 10.13px 0 0;\r\n  }\r\n\r\n  &[endIcon] i.material-icons {\r\n    float: right;\r\n    margin: 0 0 0 8.67px;\r\n  }\r\n\r\n  // SIZE\r\n  &[size] {\r\n    color: #ffffff;\r\n    background-color: var(--primary-color);\r\n\r\n    &[size=\"sm\"] {\r\n      --padding: var(--padding-sm);\r\n    }\r\n\r\n    &[size=\"md\"] {\r\n      --padding: var(--padding-md);\r\n    }\r\n\r\n    &[size=\"lg\"] {\r\n      --padding: var(--padding-lg);\r\n    }\r\n  }\r\n\r\n  // COLOR\r\n  &[color] {\r\n    --bg-color: var(--btn-default-bg-color);\r\n    background-color: var(--bg-color);\r\n\r\n    &[color=\"default\"] {\r\n      color: #3f3f3f;\r\n    }\r\n\r\n    &[color=\"default\"]:focus,\r\n    &[color=\"default\"]:hover {\r\n      --bg-color: var(--btn-default-bg-color-hover);\r\n      cursor: pointer;\r\n    }\r\n\r\n    &[color=\"primary\"] {\r\n      --bg-color: rgba(var(--primary-color-light), 1) !important;\r\n      color: white;\r\n\r\n      &:focus,\r\n      &:hover {\r\n        --bg-color: var(--primary-color);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    &[color=\"secondary\"] {\r\n      --bg-color: rgba(var(--secondary-color-light), 1);\r\n      color: white;\r\n\r\n      &:focus,\r\n      &:hover {\r\n        --bg-color: var(--secondary-color);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    &[color=\"danger\"] {\r\n      --bg-color: rgba(var(--danger-color-light), 1);\r\n      color: white;\r\n\r\n      &:focus,\r\n      &:hover {\r\n        --bg-color: var(--danger-color);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 37
            },
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-ff0324071a476bf1fac95559ddbb78c847163c5a1ca5bf8496da0e26ee7b4a772f8f9b0c56a83969346873776e74477561097ff98c155cad23c26651bc48914d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ButtonComponent } from './components/button/button.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}